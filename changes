
LIBNIX CHANGES FROM 2.1 to 3.0.x

20100704: By Diego Casorran <diegocr[]users.sf.net>
* time/clock.c: Changed to use ReadEClock
* stdlib/realloc.c: Changed CopyMem() to bcopy()
* stdio/open.c: Improved write() function
* misc/bzero.c: Optimized small operations
* misc/bcopy.c: Optimized small operations
* string/memset.c: Optimized small operations
* string/memchr.c: Speed Improvement
* string/memcmp.c: Speed Improvement

20091129: By Diego Casorran <diegocr[]users.sf.net>
* stdio/fwrite.c: bugfix for segfaults caused while using stderr
* stdio/fputs.c: bugfix for segfaults caused while using stderr
* stdio/__swbuf.c: workaround/bugfix for unbuffered streams..
* stdio/vsnprintf.c: fixed a "buffer full" state bug..
* stdio/perror.c: bugfix for segfaults caused by using stderr
* stdlib/malloc.c: Removed "dummy" opening of dos.library from withtin
  __initmalloc() - why it was here!?
* string/memcpy.c: Replaced CopyMem() by internal bcopy()
* stdio/vfprintf.c: replaced fputc by putc to make it somewhat faster
* stdio/open.c: _allocfd() will reallocate stdfiledes on increments by 10
* stdio/open.c: MODE_READWRITE will only be used when O_CREAT
* stdio/open.c: bugfix due no Seek()'ing to EOF when O_APPEND is used (!)
* stdio/open.c: stderr is now opened by using CONSOLE: instead of '*'
* stdio/*: stdin, stdout, and stderr are now protected from being closed..
* stdlib/malloc.c: moved free() here and made local variables static
* extra/gettimeofday.c: changed to use GetSysTime() with UNIT_MICROHZ
* Added own-made implementation of POSIX Semaphores.
* Added dummy implementations for dcgettext, dgettext, gettext, textdomain
* Added libmui.a functions - why not?
* Added auto-initialization for timer.device
* Added auto initialization of bsdsocket.library, including mapping
  of errno/h_errno variables and program name to [v]syslog messages.
* Added functions: v/asprintf, fnmatch, strlcat, nl_langinfo, basename,
  getline, getdelim, readpassphrase, getpass, getpass_r, memrchr, gmtime_r,
  localtime_r, asctime_r, ctime_r, strerror_r, strtok_r, poll, strcmpi,
  strncmpi, stristr, strcasestr, memdup, truncate, ftruncate, syslog,
  openlog, closelog, setlogmask, inet_addr, socketpair, inet_aton, inet_ntoa,
  inet_ntop, inet_pton, intoa, sleep, usleep, nanosleep, memmem, mempcpy,
  stpncpy, physmem_total, physmem_available, getruntime, popen, pclose, ffs,
  unctrl, unctrllen, telldir, seekdir, scandir, alphasort, strndup, strnlen,
  strlcpy, strchrnul, 
* Somewhat improved strtok, strtok_r, strspn, strdup
* Added IEEE math functions sqrt, sqrtf, sqrtl, cbrt, cbrtf, cbrtl, exp,
  expf, expl, exp2, exp2f, exp2l, hypot, hypotf, hypotl, log2, log2f, log2l,
  log10, log10f, log10l, copysign, copysignf, copysignl, rint, rintf, rintl,
  round, roundf, roundl, trunc, truncf, truncl, acosh, acoshf, acoshl
* Added misc function ConsoleWidth(), on *nix this is normally achieved
  using the following code (which you can replace with that function):
  struct winsize wsz;
  fd = fileno (stderr);
  ioctl (fd, TIOCGWINSZ, &wsz);
  return wsz.ws_col;

